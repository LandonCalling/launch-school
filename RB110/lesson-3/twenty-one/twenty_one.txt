=begin
---------------- Problem
Restate Problem: Build a game of 21.  That has the rules listed below.

Input: 

Output: 

Rules: 
  - You start with a normal 52-card deck consisting of:
    - 4 suits: heats, diamonds, clubs and spades
    - 13 values: 2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, Ace
  - The goal of Twenty One is to try to get as close to 21 as possible, without
    going over.  If you go over 21, it's a bust and you lose.
  - Setup
    - The game consists of a "dealer" and a "player".
    - Both participants are initially dealt 2 cards.
    - The Player can see their 2 cards, but can only see 1 of the dealer's cards
  - Card Values:
    - Cards 2 - 10: face value
    - Face Cards: 10
    - Ace: 1 or 11
      - The ace's value is determined each time a new card is drawn from the
        deck.
      - Ex: If the hand contains a 2, an ace, and a 5, then the total value
        of the hand is 18.  In this case the ace is worth 11 because the sum
        of the hand (2 + 11 + 5) doesn't exceed 21.  Now, say another card is
        drawn and it happens to be an ace.  Your program will have to determine
        the value of both aces.  If the sum of the hand (2 + 11 + 5 + 11)
        exceeds 21 then one of the aces must be worth 1, resulting in the
        hand's total value being 19.  What happens if another card is drawn
        and it also happens to be an ace?  It can get tricky if there are
        multiple aces in a hand so your program must account for that.
  - Player Turn:
    - The palyer goes first.
    - Can decide to either 'hit' or 'stay'.
    - A hit means the player will ask for another card.
      - If the total exceeds 21, then the 'player' 'busts' and loses.
    - The decision to hit or stay will depend on what the player's cards are
      and what the player thinks the dealer has.
      - If the dealer is showing a '10' (the other card is hidden), and the
        player has a '2' and a '4', then the obvious choice is for the player
        to 'hit'.
    - The player can continue to hit as many times as they want.
    - The turn is over when the player either busts or stays.
    - If the player busts, the game is over and the dealer won.
  - Dealer Turn:
    - When the player stays, it's the dealer's turn.
    - The dealer must follow a strict rule for determining whether to hit
      or stay:
      - Hit until the total is at least 17.
    - If the dealer busts, then the player wins.
  - Comparing cards:
    - When both players and the dealer stay, it's time to compare the total
      value of the cards and see who has the highest value.
      
Assumptions:

---------------- Modelling / Examples


---------------- Data Structures
array for suits
array for card values
nested array for deck (i.e. [[:heart, 10], [:spade, 5]])
hash to contain player and dealer information (one for each player/dealer)
  - hand
  - busted flag
  - score
  - player number (for games with multiple human players)
  - player name

---------------- Scratchpad


---------------- Algorithm
0. Game intro
   - welcome player
   - introduce rules
   - ask for player's name
1. Initialize deck
    - create deck of type [[value, suit], [value, suit], etc.]
    - shuffle the deck
2. Deal cards to player and dealer
3. Player turn: hit or stay
  - display player and dealer cards, keeping one of the dealers cards hidden
  - ask if the player wants to hit or stay
    - if hit
        - draw card and add to player hand
        - update hand total
    - else
      - break out of loop
  - calculate score
  - repeat until bust or "stay"
4. If player bust, dealer wins.
5. Dealer turn: hit or stay
  - display dealer and player cards revealing hidden card
  - deal card
  - calculate score
  - repeat until total >= 17
6. If dealer bust, player wins.
7. Compare cards and declare winner.
=end